
Перем юТест;

/////////////////////////////////////////////////////////////////////////////////

Функция ВходныеПараметрыКорректны(МассивАргументов)
	Возврат МассивАргументов.Количество() > 0;
КонецФункции

Процедура ОбновитьКонфигурациюИзКаталогаШаблонов(Знач КаталогШаблонаВерсии)

	ПодключитьСценарий("build-main.os", "МенеджерСборки");
	ПодключитьСценарий("v8runner.os", "УправлениеКонфигуратором");
	
	МенеджерСборки = Новый МенеджерСборки;
	УправлениеКонфигуратором = Новый УправлениеКонфигуратором;
	
	Настройки = МенеджерСборки.Настройки();
	
	УправлениеКонфигуратором.ПутьКПлатформе1С = Настройки.ПутьК1С;
	УправлениеКонфигуратором.УстановитьКонтекст(
		"/S""" + Настройки.ИмяСервера + "\" + Настройки.ИмяБазы + """",
		Настройки.АдминистраторБазы,
		Настройки.ПарольАдминистратораБазы);
	УправлениеКонфигуратором.УстановитьКлючРазрешенияЗапуска(Настройки.КодРазрешения);
	
	// в случае ошибки выбросит исключение, которое автоматически будет выведено в лог сборки
	УправлениеКонфигуратором.ОбновитьКонфигурацию(КаталогШаблонаВерсии);
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////////////////////
// Тесты модуля

Функция ПолучитьСписокТестов(Знач ОбработкаТестирования) Экспорт

	юТест = ОбработкаТестирования;
	
	СписокТестов = Новый Массив();
	СписокТестов.Добавить("Тест_ПроверитьВходныеПараметры");

	Возврат СписокТестов;
	
КонецФункции

Функция ЭтоЗапускТеста()
	Возврат СтартовыйСценарий().Источник <> ТекущийСценарий().Источник;
КонецФункции

Процедура Тест_ПроверитьВходныеПараметры() Экспорт

	МассивАргументов = Новый Массив;
	МассивАргументов.Добавить("--пока просто путь к инсталлятору--");
	
	юТест.ПроверитьИстину(ВходныеПараметрыКорректны(МассивАргументов));

КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
// Точка входа

Если Не ЭтоЗапускТеста() Тогда
	// Call Main()
КонецЕсли;